pkgname=termy-qt
pkgver=1.1.4
pkgrel=3
_pkgdir="termysequence-$pkgver"
pkgdesc="TermySequence terminal multiplexer client"
arch=('x86_64' 'i686')
url="https://termysequence.io"
license=('GPL2' 'LGPL3' 'CCPL:cc-by' 'BSD')
makedepends=('cmake>=3.9.0' 'qt5-base' 'qt5-svg' 'qt5-tools' 'systemd>=235'
             'ninja>=1.8.2' 'python2>=2.7' 'python2-jinja>=2.10' 'icu>=60.2')
checkdepends=('desktop-file-utils' 'appstream-glib')
depends=('fuse3' 'zlib' 'sqlite' 'qt5-base' 'qt5-svg' 'icu>=60.2' 'systemd>=235')
source=("termysequence-qt_$pkgver.orig.tar.xz" 'set-clipboard-selection.patch' 'fix-gcc-9-warnings-and-errors.patch')
sha256sums=('1b90610e93c227e72c5c7a8ed0d4e9fe005637dc563bcb7b0bceb58784599dc0' 'e52f17962246747c4f2f55535682279d9e102dc740a70f3f1633e0241283502d' 'b042722c45c63658a9177d06a8789e22b681cc74fce7a41f07a3143579e0c221')

prepare() {
    cd $_pkgdir

    # Patches here (do not remove this comment)
    patch -Np1 -i "${srcdir}/set-clipboard-selection.patch"
    patch -Np1 -i "${srcdir}/fix-gcc-9-warnings-and-errors.patch"

    if [ "$CARCH" = 'x86_64' ]; then
        v8arch=x64;
    elif [ "$CARCH" = 'i686' ]; then
        v8arch=x86;
    else
        echo "Unsupported architecture '$CARCH'" 1>&2
        exit 1
    fi

    cmake \
        -DCMAKE_INSTALL_PREFIX:PATH=/usr \
        -DSYSCONF_INSTALL_DIR:PATH=/etc \
        -DSHARE_INSTALL_PREFIX:PATH=/usr/share \
        -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
        -DCMAKE_BUILD_TYPE=Release \
        -DV8_ARCH=$v8arch \
        .
}

build() {
    cd $_pkgdir

    # Conjure up a python->python2 environment
    mkdir -p py2
    ln -sf /usr/bin/python2 py2/python

    PATH="$(pwd)/py2:$PATH" make -j4
}

package() {
    cd $_pkgdir
    make DESTDIR="$pkgdir/" install install_emoji install_icons
    install -Dpm 644 vendor/v8-linux/v8/LICENSE.v8 $pkgdir/usr/share/licenses/$pkgname/LICENSE.v8
}
